#include<string.h>
#include"stdafx.h"
#include<time.h>
#include<easyx.h>
#include<graphics.h>
#include<conio.h>
#include<stdlib.h>
#include<stdio.h>
#include<tchar.h>
#include<Windows.h>
#include<MMSystem.h>
#pragma comment(lib,"WINMM.LIB")

MOUSEMSG m1;

typedef struct{
	int hour;
	int min;
	int sec;
}mTime;

typedef struct{
int Num;   //编号
TCHAR Line[400];  //线路
char Name[40];//餐厅名称
TCHAR infor[400];//基本介绍
char TravelTime[20];//路程时间
int Eatingtime;//用餐时间
char Kind[20];//餐种
TCHAR  Aveprice[20];//平均价位
char Place[40];//地区
}Restaurant;

typedef struct{
int month;   //用餐月份
int day;  //用餐日期
TCHAR Name[20];//餐厅名称
TCHAR Kind[20];   //餐厅种类
int Aveprice;//餐厅平均价位
int Price;//餐厅实际消费
}Record;

Record re[1000];
Restaurant res[100];
Restaurant test[100];
Restaurant temp;
extern char s1[20];
extern char s2[20];
extern char ad[10];
extern char au[10];
extern char hour[10];
extern char min[10];
extern char b[10];
extern int pd;
extern int pu;
extern int h;
extern int m;
int h3,m3,h2,m2;
extern int count;
int Aveprice[100];
int Eatingtime[100];
TCHAR save[10];
extern int Music[6];
extern int Foodpic[16];
int assist=0;
int price;
int flagalarm=0;

void initfoodpage(void);
void initfood(void);
int FoodMenu(void);
extern void init(void);
extern void Menu(void);
void Searchresult(void);
void kindscreen(void);
void pricescreen(void);
void placescreen(void);
void savetime(void);
void presentpage(void);
void present(void);
int scanpage(int,int);
void saveres(void);
void Resshow(int i);
void Save(int);
void alarm(void);
int stringtointeger(char *str);
char *integertostring(int n);
void readpic(int i);

int stringtointeger(char *str)
{
	int n=0,i=0,j=-1;
	while(str[i]!='\n'){
		n=n*10+str[i]-'0';
		i++;
	}
	return(n);
}

int stringtointeger2(char *str)
{
	int n=0,i=0,j=-1;
	while(str[i]!='\0'){
		n=n*10+str[i]-'0';
		i++;
	}
	return(n);
}

char *integertostring(int n)
{
	static char str[80];
	char temp_str[80];
	int i=0,j=-1;
	if(n==0)
		return("0");
	if(n<0){
		n=-n;
		str[i++]='-';
	}
	while(n>0){
		temp_str[++j]=n%10+'0';
		n/=10;
	}
	while(j>=0)
		str[i++]=temp_str[j--];
	str[i]='\0';
	return str;
}

void saveres(void)
{
	FILE *fp1,*fp2,*fp3,*fp4,*fp5,*fp6,*fp7;
		if((fp1=fopen("D:\\Name.txt","r"))==NULL)
		{
			printf("Can't open  file.\n");
			exit(1);
		}
		if((fp2=fopen("D:\\餐种.txt","r"))==NULL)
		{
			printf("Can't open file.\n");
			exit(1);
		}
		if((fp3=fopen("D:\\地点.txt","r"))==NULL)
		{
			printf("Can't open file.\n");
			exit(1);
		}
		if((fp4=fopen("D:\\路线.txt","r"))==NULL)
		{
			printf("Can't open file.\n");
			exit(1);
		}
		if((fp5=fopen("D:\\时间.txt","r"))==NULL)
		{
			printf("Can't open file.\n");
			exit(1);
		}
		if((fp6=fopen("D:\\人均.txt","r"))==NULL)
		{
			printf("Can't open file.\n");
			exit(1);
		}
		if((fp7=fopen("D:\\餐厅介绍&推荐菜.txt","r"))==NULL)
		{
			printf("Can't open file.\n");
			exit(1);
		}
		while(!feof(fp1))
		{
			int i;
			char *j;
			for(i=0;i<42;i++)
			j=fgets(res[i].Name,40,fp1);
		}
		while(!feof(fp2))
		{
			int i;
			char *j;
			for(i=0;i<42;i++)
			j=fgets(res[i].Kind,40,fp2);
		}
		while(!feof(fp3))
		{
			int i;
			char *j;
			for(i=0;i<42;i++)
			j=fgets(res[i].Place,20,fp3);
		}
		while(!feof(fp4))
		{
			int i;
			char *j;
			for(i=0;i<42;i++)
			j=fgets(res[i].Line,400,fp4);
		}
		while(!feof(fp5))
		{
			int i;
			char *j;
			for(i=0;i<42;i++)
			j=fgets(res[i].TravelTime,20,fp5);
		}
		while(!feof(fp6))
		{
			int i;
			char *j;
			for(i=0;i<42;i++)
			j=fgets(res[i].Aveprice,20,fp6);
		}
		while(!feof(fp7))
		{
			int i;
			char *j;
			for(i=0;i<42;i++)
			j=fgets(res[i].infor,400,fp7);
		}
		fclose(fp1);
		fclose(fp2);
		fclose(fp3);
		fclose(fp4);
		fclose(fp5);
		fclose(fp6);
		fclose(fp7);
}


void Food(void)
{
	int i;
	if(Foodpic[0])
	loadimage(NULL, _T("D:\\美食导航背景图1.jpg"),640,480);
	else if(Foodpic[1])
    loadimage(NULL, _T("D:\\美食导航背景图2.jpg"),640,480);
	else if(Foodpic[2])
    loadimage(NULL, _T("D:\\美食导航背景图3.jpg"),640,480);
	else if(Foodpic[3])
    loadimage(NULL, _T("D:\\美食导航背景图4.jpg"),640,480);
	else if(Foodpic[4])
    loadimage(NULL, _T("D:\\美食导航背景图5.jpg"),640,480);
	else if(Foodpic[5])
    loadimage(NULL, _T("D:\\美食导航背景图6.jpg"),640,480);
	else if(Foodpic[6])
    loadimage(NULL, _T("D:\\美食导航背景图7.jpg"),640,480);
	else if(Foodpic[7])
    loadimage(NULL, _T("D:\\美食导航背景图8.jpg"),640,480);
	else if(Foodpic[8])
    loadimage(NULL, _T("D:\\美食导航背景图9.jpg"),640,480);
	else if(Foodpic[9])
    loadimage(NULL, _T("D:\\美食导航背景图10.jpg"),640,480);
	else if(Foodpic[10])
    loadimage(NULL, _T("D:\\美食导航背景图11.jpg"),640,480);
	else if(Foodpic[11])
    loadimage(NULL, _T("D:\\美食导航背景图12.jpg"),640,480);
	else if(Foodpic[12])
    loadimage(NULL, _T("D:\\美食导航背景图13.jpg"),640,480);
	else if(Foodpic[13])
    loadimage(NULL, _T("D:\\美食导航背景图14.jpg"),640,480);
	else if(Foodpic[14])
    loadimage(NULL, _T("D:\\美食导航背景图15.jpg"),640,480);
	else if(Foodpic[15])
    loadimage(NULL, _T("D:\\美食导航背景图16.jpg"),640,480);
	setfillcolor(LIGHTBLUE);
	setlinecolor(BLACK);
	setlinestyle(PS_SOLID | PS_JOIN_BEVEL, 10);
	setbkmode(TRANSPARENT);
	settextcolor(BLACK);
	settextstyle(30,0.4, _T("楷体"));
	saveres();
	/*录入餐厅的相关信息*/
	for(i=0;i<100;i++)
		test[i]=res[i];
	initfood();
}

void initfoodpage(void)
{
	setbuf(stdin,NULL);
    if(Foodpic[0])
	loadimage(NULL, _T("D:\\美食导航背景图1.jpg"),640,480);
	else if(Foodpic[1])
    loadimage(NULL, _T("D:\\美食导航背景图2.jpg"),640,480);
	else if(Foodpic[2])
    loadimage(NULL, _T("D:\\美食导航背景图3.jpg"),640,480);
	else if(Foodpic[3])
    loadimage(NULL, _T("D:\\美食导航背景图4.jpg"),640,480);
	else if(Foodpic[4])
    loadimage(NULL, _T("D:\\美食导航背景图5.jpg"),640,480);
	else if(Foodpic[5])
    loadimage(NULL, _T("D:\\美食导航背景图6.jpg"),640,480);
	else if(Foodpic[6])
    loadimage(NULL, _T("D:\\美食导航背景图7.jpg"),640,480);
	else if(Foodpic[7])
    loadimage(NULL, _T("D:\\美食导航背景图8.jpg"),640,480);
	else if(Foodpic[8])
    loadimage(NULL, _T("D:\\美食导航背景图9.jpg"),640,480);
	else if(Foodpic[9])
    loadimage(NULL, _T("D:\\美食导航背景图10.jpg"),640,480);
	else if(Foodpic[10])
    loadimage(NULL, _T("D:\\美食导航背景图11.jpg"),640,480);
	else if(Foodpic[11])
    loadimage(NULL, _T("D:\\美食导航背景图12.jpg"),640,480);
	else if(Foodpic[12])
    loadimage(NULL, _T("D:\\美食导航背景图13.jpg"),640,480);
	else if(Foodpic[13])
    loadimage(NULL, _T("D:\\美食导航背景图14.jpg"),640,480);
	else if(Foodpic[14])
    loadimage(NULL, _T("D:\\美食导航背景图15.jpg"),640,480);
	else if(Foodpic[15])
    loadimage(NULL, _T("D:\\美食导航背景图16.jpg"),640,480);
	setfillcolor(LIGHTGREEN);
	setlinecolor(BLACK);
	setlinestyle(PS_SOLID | PS_JOIN_BEVEL, 10);
	setbkmode(TRANSPARENT);
	settextcolor(BLACK);
	settextstyle(30,0.4, _T("楷体"));
	fillrectangle(480,30,640,80);
	fillrectangle(480,126,640,176);
	fillrectangle(480,222,640,272);
	fillrectangle(480,318,640,368);
	fillrectangle(480,414,640,464);
	fillrectangle(0,420,100,480);
	outtextxy(490,48,_T("餐厅种类"));
	outtextxy(490,144,_T("餐厅价位"));
	outtextxy(490,240,_T("餐厅地区"));
	outtextxy(490,336,_T("回校时间"));
	outtextxy(490,432,_T("查询"));
	outtextxy(20,432,_T("返回"));
}

void initfood(void)               //界面初始化
{
	setbuf(stdin,NULL);
    if(Foodpic[0])
	loadimage(NULL, _T("D:\\美食导航背景图1.jpg"),640,480);
	else if(Foodpic[1])
    loadimage(NULL, _T("D:\\美食导航背景图2.jpg"),640,480);
	else if(Foodpic[2])
    loadimage(NULL, _T("D:\\美食导航背景图3.jpg"),640,480);
	else if(Foodpic[3])
    loadimage(NULL, _T("D:\\美食导航背景图4.jpg"),640,480);
	else if(Foodpic[4])
    loadimage(NULL, _T("D:\\美食导航背景图5.jpg"),640,480);
	else if(Foodpic[5])
    loadimage(NULL, _T("D:\\美食导航背景图6.jpg"),640,480);
	else if(Foodpic[6])
    loadimage(NULL, _T("D:\\美食导航背景图7.jpg"),640,480);
	else if(Foodpic[7])
    loadimage(NULL, _T("D:\\美食导航背景图8.jpg"),640,480);
	else if(Foodpic[8])
    loadimage(NULL, _T("D:\\美食导航背景图9.jpg"),640,480);
	else if(Foodpic[9])
    loadimage(NULL, _T("D:\\美食导航背景图10.jpg"),640,480);
	else if(Foodpic[10])
    loadimage(NULL, _T("D:\\美食导航背景图11.jpg"),640,480);
	else if(Foodpic[11])
    loadimage(NULL, _T("D:\\美食导航背景图12.jpg"),640,480);
	else if(Foodpic[12])
    loadimage(NULL, _T("D:\\美食导航背景图13.jpg"),640,480);
	else if(Foodpic[13])
    loadimage(NULL, _T("D:\\美食导航背景图14.jpg"),640,480);
	else if(Foodpic[14])
    loadimage(NULL, _T("D:\\美食导航背景图15.jpg"),640,480);
	else if(Foodpic[15])
    loadimage(NULL, _T("D:\\美食导航背景图16.jpg"),640,480);
	setfillcolor(LIGHTGREEN);
	setlinecolor(BLACK);
	setlinestyle(PS_SOLID | PS_JOIN_BEVEL, 10);
	setbkmode(TRANSPARENT);
	settextcolor(BLACK);
	settextstyle(30,0.4, _T("楷体"));
	fillrectangle(480,30,640,80);
	fillrectangle(480,126,640,176);
	fillrectangle(480,222,640,272);
	fillrectangle(480,318,640,368);
	fillrectangle(480,414,640,464);
	fillrectangle(0,420,100,480);
	outtextxy(490,48,_T("餐厅种类"));
	outtextxy(490,144,_T("餐厅价位"));
	outtextxy(490,240,_T("餐厅地区"));
	outtextxy(490,336,_T("回校时间"));
	outtextxy(490,432,_T("查询"));
	outtextxy(20,432,_T("返回"));
	saveimage("D:\\食物界面截图.jpg");
	int flag=1;
	while(flag)
	{
		if (MouseHit())   //检测
	    {
			m1=GetMouseMsg();//获取鼠标状态
			
			if(m1.uMsg==WM_RBUTTONDOWN)
			{
				 
				if(m1.x<=640&&m1.x>=440&&m1.y>=0&&m1.y<=96)
				{ 
					initfoodpage();
					setorigin(40,40);
					loadimage(NULL,"D:\\柯南1.jpg",360,360);
					setorigin(0,0);
					outtextxy(60,100,_T("我们可供选择的餐种有"));
					outtextxy(60,160,"日料");
					outtextxy(60,200,"韩食");
					outtextxy(60,240,"中餐");
					outtextxy(60,280,"西餐");
					saveimage("D:\\食物筛选提示截图1.jpg");
				 }
				else if(m1.x<=640&&m1.x>=440&&m1.y>96&&m1.y<=192)
				{
					initfoodpage();
					setorigin(40,40);
					loadimage(NULL,"D:\\柯南2.jpg",360,360);
					setorigin(0,0);
					outtextxy(80,130,_T("您需要考虑一下"));
					outtextxy(80,170,_T("您所期望的价位区间偶"));
					saveimage("D:\\食物筛选提示截图2.jpg");
				 }
				else if(m1.x<=640&&m1.x>=440&&m1.y>192&&m1.y<288)
				{
					 initfoodpage();
					 setorigin(40,40);
					loadimage(NULL,"D:\\柯南3.jpg",360,360);
					setorigin(0,0);
					outtextxy(100,100,_T("我们可供选择的地区有"));
					outtextxy(100,140,_T("新街口"));
					outtextxy(100,180,_T("马群"));
					outtextxy(100,220,_T("学则路"));
					outtextxy(100,260,_T("仙林中心"));
					outtextxy(100,300,_T("和园"));
					saveimage("D:\\食物筛选提示截图3.jpg");
				}
				else if(m1.x<=640&&m1.x>=440&&m1.y>288&&m1.y<=384)
				{
					initfoodpage();
					setorigin(40,40);
					loadimage(NULL,"D:\\柯南4.jpg",360,360);
					setorigin(0,0);
					outtextxy(120,100,_T("您要注意一下"));
					outtextxy(120,140,_T("您的返校时间哦"));
					saveimage("D:\\食物筛选提示截图4.jpg");
				}
			}
			if(m1.mkCtrl)
				flag=0;
		}
		FlushMouseMsgBuffer();
	}

	switch(FoodMenu())
	{
	case 1:Sleep(200);kindscreen();break;
	case 2:Sleep(200);pricescreen();break;
	case 3:Sleep(200);placescreen();break;
	case 4:Sleep(200);savetime();break;
	case 5:Sleep(200);Searchresult();break;
    case 6:Sleep(200);init();break;

	}
}

int FoodMenu(void)        
{
	int y1=40,i=0;
	char c;
	setfillcolor(LIGHTBLUE);
	setlinecolor(BLACK);
	setlinestyle(PS_SOLID | PS_JOIN_BEVEL, 10);
	setbkmode(TRANSPARENT);
	settextcolor(BLACK);
	settextstyle(30,0.4, _T("楷体"));
	outtextxy(490,48,_T("餐厅种类"));
	outtextxy(490,144,_T("餐厅价位"));
	outtextxy(490,240,_T("餐厅地区"));
	outtextxy(490,336,_T("回校时间"));
	outtextxy(490,432,_T("查询"));
	outtextxy(20,432,_T("返回"));
	FlushMouseMsgBuffer();
	while(true)
	{
		if (MouseHit())   //检测
	    {
			m1=GetMouseMsg();//获取鼠标状态
			
			if(m1.uMsg==WM_LBUTTONDOWN)
			{
				 if(m1.x>=20&&m1.x<=20+textwidth("返回")&&m1.y>=432&&m1.y<=462)//返回到主界面
					 return 6;
				else if(m1.x<=640&&m1.x>=440&&m1.y>=0&&m1.y<=96)
				     return 1; 
				else if(m1.x<=640&&m1.x>=440&&m1.y>96&&m1.y<=192)
					 return 2;
				else if(m1.x<=640&&m1.x>=440&&m1.y>192&&m1.y<288)
					 return 3;
				else if(m1.x<=640&&m1.x>=440&&m1.y>288&&m1.y<=384)
				     return 4;
				else if(m1.x<=640&&m1.x>=440&&m1.y>384&&m1.y<=480)
				     return 5;

		}
		if (_kbhit())
	    {
            c=_getch();
			if(c>='1'&&c<='6')
				return (c-'0');
         }
	}
}
}

void kindscreen(void)
{
	int result;
	while(true)
	{
	InputBox(s1,20,_T("请输入您想吃的餐种"),_T("美食导航"),false);// 定义字符串缓冲区，并接收用户输入
	if(strcmp(s1,"日料")&&strcmp(s1,"韩食")&&strcmp(s1,"中餐")&&strcmp(s1,"西餐"))
	{
		result=MessageBox(NULL,TEXT("您的输入无效，请重新输入"),TEXT("你好"),MB_ICONINFORMATION|MB_YESNO);
	    switch(result)
		{
		case IDYES:break;
		case IDNO:initfood();
		}
	}
	else
		break;
	}
		int i,j=0;
	if(!(strcmp(test[40].Kind,s1)))
			{
				test[j]=test[40];
				j++;
			}
	int k;
	k=strlen(s1);
	*(s1+k)='\n';
	*(s1+k+1)='\0';
	for(i=0;i<count;i++)//在餐种上的筛选过程
			if(!(strcmp(test[i].Kind,s1)))
			{
				test[j]=test[i];
		     j++;
	   }
			count=j;
	initfood();
}

void pricescreen(void)
{
	int result;
	while(true)
	{
	InputBox(ad,10,_T("请输入您预期的消费下限"),_T("美食导航"),false);
	InputBox(au,10,_T("请输入您预期的消费上限"),_T("美食导航"),false);
		sscanf(ad,"%d",&pd);
		sscanf(au,"%d",&pu);
		
	if(pd<0||pu<0||pd>pu)
	{
		result=MessageBox(NULL,TEXT("您的输入无效，请重新输入"),TEXT("你好"),MB_ICONINFORMATION|MB_YESNO);
	    switch(result)
		{
		case IDYES:break;
		case IDNO:return;
		}
	}
	else
		break;
	}
    int i,j=0;
	for(i=0;i<count;i++)//在价位上的筛选过程
		if(stringtointeger(test[i].Aveprice)>=pd&&stringtointeger(test[i].Aveprice)<=pu)
			{
				test[j]=test[i];
		     j++;
		}
		count=j;
	initfood();
}

void placescreen(void)
{
	int result;
	while(true)
	{
	InputBox(s2,20,_T("请输入您期望餐厅的地区"),_T("美食导航"),false);// 定义字符串缓冲区，并接收用户输入
	if(strcmp(s2,"新街口")&&strcmp(s2,"仙林中心")&&strcmp(s2,"马群")&&strcmp(s2,"和园")&&strcmp(s2,"学则路"))
	{
		result=MessageBox(NULL,TEXT("您的输入无效，请重新输入"),TEXT("你好"),MB_ICONINFORMATION|MB_YESNO);
	    switch(result)
		{
		case IDYES:break;
		case IDNO:return;
		}
	}
	else
		break;
	}
	int i,j=0;
	if(!(strcmp(test[40].Place,s2)))
		{
			test[j]=test[40];
			j++;
		}
	int k;
	k=strlen(s2);
	*(s2+k)='\n';
	*(s2+k+1)='\0';
	for(i=0;i<count;i++)//在用餐地点上的筛选过程
		if(!(strcmp(test[i].Place,s2)))
			{
				test[j]=test[i];
		     j++;
	     }
	count=j;
		initfood();
}

void savetime(void)
{
	int result;
	time_t rawtime;
	struct tm *timeinfo;
	time(&rawtime);
	timeinfo=localtime(&rawtime);
	while(true)
	{
	InputBox(hour,10,_T("请输入您预期返校的小时"),_T("美食导航"),false);
	InputBox(min,10,_T("请输入您预期返校的分钟"),_T("美食导航"),false);
	sscanf(hour,"%d",&h);
	sscanf(min,"%d",&m);
	if(h>24||m>60||h<0||m<0||h<timeinfo->tm_hour||((h==timeinfo->tm_hour)&&m<=timeinfo->tm_min))
	{
		result=MessageBox(NULL,TEXT("您的时间输入无效，请重新输入"),TEXT("你好"),MB_ICONINFORMATION|MB_YESNO);
	    switch(result)
		{
		case IDYES:break;
		case IDNO:return;
		}
	}
	else
		break;
	}
	initfood();
}

void Searchresult(void)
{
   presentpage();
   present();
}

void presentpage(void)
{
   loadimage(NULL,_T("D://时空穿越.jpg"),640,480);
   setfillcolor(LIGHTCYAN);
   fillrectangle(0,0,100,120);
   setfillcolor(YELLOW);
   fillrectangle(0,120,100,480);
   settextcolor(YELLOW);
    settextcolor(BLACK);
   outtextxy(20,440,_T("首页"));
}

void present(void)
{
   presentpage();
	int i;
	settextcolor(WHITE);
	outtextxy(200,420,"一共搜索到");
	outtextxy(200+textwidth("一共搜索到"),420,integertostring(count));
	outtextxy(200+textwidth("一共搜索到xx"),420,"家餐厅");
	settextcolor(BLACK);
   if(count==0)
   {
	   settextcolor(WHITE);
	   outtextxy(200,200,_T("抱歉没有餐厅符合您的要求"));
	   saveimage("D:\\餐厅筛选结果截图1.jpg");
	   while(true)
	{
		FlushMouseMsgBuffer();
		if (MouseHit())   //检测
	        m1=GetMouseMsg();
   if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=20+textwidth("首页")&&m1.y>=440&&m1.y<=480)
	   init();
     }
   }
   else if(count<=10&&count>0)
   {
     presentpage();
	settextcolor(WHITE);
	int flag1=1;
	for(i=0;i<count;i++)
	   outtextxy(200,10+40*i,test[i].Name);
	   FlushMouseMsgBuffer();
	   while(flag1)
	 {
	    m1=GetMouseMsg();
		FlushMouseMsgBuffer();
	   if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=10&&m1.y<=40&&count>=1)
		   Resshow(0);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=50&&m1.y<=80&&count>=2)
		   Resshow(1);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=90&&m1.y<=120&&count>=3)
		   Resshow(2);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=130&&m1.y<=160&&count>=4)
		   Resshow(3);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=170&&m1.y<=200&&count>=5)
		   Resshow(4);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=210&&m1.y<=240&&count>=6)
		   Resshow(5);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=250&&m1.y<=280&&count>=7)
		   Resshow(6);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=290&&m1.y<=320&&count>=8)
		   Resshow(7);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=330&&m1.y<=360&&count>=9)
		   Resshow(8);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=370&&m1.y<=400&&count>=10)
		   Resshow(9);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=520&&m1.y>=420)
		   flag1=0;
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=100&&m1.y>=440&&m1.y<=480)
	   init();
   }
   }
   else if(count>10&&count<=20)
   {
	   int y;
	   y=scanpage(0,10);
	   presentpage();
	settextcolor(WHITE);
	int flag1=1;
	for(i=0;i<count-10;i++)
	   outtextxy(200,10+40*i,test[i+10].Name);
	   FlushMouseMsgBuffer();
	   while(flag1)
	 {
	        m1=GetMouseMsg();
		FlushMouseMsgBuffer();
	   if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=10&&m1.y<=40&&count>=11)
		   Resshow(10);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=50&&m1.y<=80&&count>=12)
		   Resshow(11);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=90&&m1.y<=120&&count>=13)
		   Resshow(12);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=130&&m1.y<=160&&count>=14)
		   Resshow(13);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=170&&m1.y<=200&&count>=15)
		   Resshow(14);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=210&&m1.y<=240&&count>=16)
		   Resshow(15);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=250&&m1.y<=280&&count>=17)
		   Resshow(16);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=290&&m1.y<=320&&count>=18)
		   Resshow(17);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=330&&m1.y<=360&&count>=19)
		   Resshow(18);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=370&&m1.y<=400&&count>=20)
		   Resshow(19);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=100&&m1.y>=440&&m1.y<=480)
	   init();
   }
   }
   else if(count>20&&count<=30)
   {
	   int y1,y2;
	  y1=scanpage(0,10);
	  y2=scanpage(10,20);
	   presentpage();
	settextcolor(WHITE);
	int flag1=1;
	for(i=0;i<count-20;i++)
	   outtextxy(200,10+40*i,test[i+20].Name);
	   FlushMouseMsgBuffer();
	   while(flag1)
	 {
	        m1=GetMouseMsg();
		FlushMouseMsgBuffer();
	   if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=10&&m1.y<=40&&count>=21)
		   Resshow(20);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=50&&m1.y<=80&&count>=22)
		   Resshow(21);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=90&&m1.y<=120&&count>=23)
		   Resshow(22);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=130&&m1.y<=160&&count>=24)
		   Resshow(23);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=170&&m1.y<=200&&count>=25)
		   Resshow(24);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=210&&m1.y<=240&&count>=26)
		   Resshow(25);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=250&&m1.y<=280&&count>=27)
		   Resshow(26);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=290&&m1.y<=320&&count>=28)
		   Resshow(27);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=330&&m1.y<=360&&count>=29)
		   Resshow(28);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=370&&m1.y<=400&&count>=30)
		   Resshow(29);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=100&&m1.y>=440&&m1.y<=480)
	   init();
   }
   }
   else if(count>30&&count<=40)
   {
	   int y1,y2,y3;
	   y1=scanpage(0,10);
       y2=scanpage(10,20);
	   y3=scanpage(20,30);
	   presentpage();
	settextcolor(WHITE);
	int flag1=1;
	for(i=0;i<count-30;i++)
	   outtextxy(200,10+40*i,test[i+30].Name);
	   FlushMouseMsgBuffer();
	   while(flag1)
	 {
	        m1=GetMouseMsg();
		FlushMouseMsgBuffer();
	   if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=10&&m1.y<=40&&count>=31)
		   Resshow(30);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=50&&m1.y<=80&&count>=32)
		   Resshow(31);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=90&&m1.y<=120&&count>=33)
		   Resshow(32);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=130&&m1.y<=160&&count>=34)
		   Resshow(33);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=170&&m1.y<=200&&count>=35)
		   Resshow(34);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=210&&m1.y<=240&&count>=36)
		   Resshow(35);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=250&&m1.y<=280&&count>=37)
		   Resshow(36);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=290&&m1.y<=320&&count>=38)
		   Resshow(37);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=330&&m1.y<=360&&count>=39)
		   Resshow(38);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=370&&m1.y<=400&&count>=40)
		   Resshow(39);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=100&&m1.y>=440&&m1.y<=480)
	   init();
   }
   }
    else if(count>40)
   {
	   int y1,y2,y3,y4;
	   y1=scanpage(0,10);
       y2=scanpage(10,20);
	   y3=scanpage(20,30);
	   y4=scanpage(30,40);
	   presentpage();
	   settextcolor(WHITE);
	  for(i=0;i<count-40;i++)
	   outtextxy(200,10+40*i,test[i+40].Name);
	   fillrectangle(500,400,640,480);
	   FlushMouseMsgBuffer();
	   while(true)
	  {
	        m1=GetMouseMsg();
		FlushMouseMsgBuffer();
	   if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=10&&m1.y<=40&&count>=41)
		   Resshow(40);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=100&&m1.y>=440&&m1.y<=480)
	   init();
      }
   }
 }

int scanpage(int n1,int n2)
{
	int i,d=n1/10;
	int flag1=1;
	d=d*10;
	presentpage();
	settextcolor(WHITE);
	for(i=n1%10;i<(n2-1)%10+1;i++)
	   outtextxy(200,10+40*i,test[i+d].Name);
	   fillrectangle(500,400,640,480);
	   settextcolor(BLACK);
	   outtextxy(520,420,_T("下一页"));
	   settextcolor(WHITE);
	   outtextxy(200,420,"一共搜索到");
	outtextxy(200+textwidth("一共搜索到"),420,integertostring(count));
	outtextxy(200+textwidth("一共搜索到xx"),420,"家餐厅");
	settextcolor(BLACK);
		   saveimage("D:\\餐厅筛选结果截图2.jpg");
	   FlushMouseMsgBuffer();
	   while(flag1)
	 {  
		 m1=GetMouseMsg();
	   if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=520&&m1.y>=420)
		   flag1=0;
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=10&&m1.y<=40)
		   Resshow(d);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=50&&m1.y<=80)
		   Resshow(d+1);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=90&&m1.y<=120)
		   Resshow(d+2);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=130&&m1.y<=160)
		   Resshow(d+3);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=170&&m1.y<=200)
		   Resshow(d+4);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=210&&m1.y<=240)
		   Resshow(d+5);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=250&&m1.y<=280)
		   Resshow(d+6);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=290&&m1.y<=320)
		   Resshow(d+7);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=330&&m1.y<=360)
		   Resshow(d+8);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=200&&m1.x<=400&&m1.y>=370&&m1.y<=400)
		   Resshow(d+9);
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=100&&m1.y>=440&&m1.y<=480)
	   init();
   }
	   return n2-n1;
}

void Resshow(int x)
{
	time_t rawtime;
	struct tm *timeinfo;
	time(&rawtime);
	timeinfo=localtime(&rawtime);
	h2=h-(timeinfo->tm_hour);
	m2=m-(timeinfo->tm_min);
	test[x].Eatingtime=h2*60+m2-2*stringtointeger(test[x].TravelTime);
	if(m>=stringtointeger(test[x].TravelTime))
	{
		h3=h;
		m3=m-stringtointeger(test[x].TravelTime);
	}
	else if(m<stringtointeger(test[x].TravelTime)&&m>=(stringtointeger(test[x].TravelTime)-60))
	{
		h3=h-1;
		m3=m-stringtointeger(test[x].TravelTime)+60;
	}
	else if(m<stringtointeger(test[x].TravelTime)-60&&m>=stringtointeger(test[x].TravelTime)-120)
	{
		h3=h-2;
		m3=m-stringtointeger(test[x].TravelTime)+120;
	}
	presentpage();
	outtextxy(20,40,_T("返回"));
	outtextxy(20,200,_T("存储"));
	settextcolor(YELLOW);
	outtextxy(110,20,test[x].Name);
	outtextxy(110,60,test[x].Kind);
	outtextxy(110,100,test[x].Place);
	outtextxy(400,100,test[x].TravelTime);
	outtextxy(400+textwidth("10"),100,"分钟");
	outtextxy(110,140,test[x].Aveprice);
	outtextxy(110+textwidth("100"),140,"RMB");
	settextcolor(WHITE);
	settextstyle(50,0,"黑体");
	outtextxy(410,200,"基本介绍");
	outtextxy(410,300,"线路简介");
	settextstyle(30,0.4,"楷体");
	settextcolor(WHITE);
	outtextxy(110,350,"您能用来吃饭的时间为");
	outtextxy(110+textwidth("您能用来吃饭的时间为"),350,integertostring(test[x].Eatingtime));
	outtextxy(110+textwidth("您能用来吃饭的时间为1000"),350,"分钟");
	settextstyle(40,0.8,"黑体");
	settextcolor(YELLOW);
	if(test[x].Eatingtime<=0)
		outtextxy(100,400,"您要是智障才去这家餐厅");
	else if(test[x].Eatingtime>0&&test[x].Eatingtime<=30)
		outtextxy(100,400,"会不会有点急，您要考虑一下");
	else if(test[x].Eatingtime>30&&test[x].Eatingtime<=120)
		outtextxy(100,400,"较合适的用餐时间，可以考虑");
	else if(test[x].Eatingtime>120)
		outtextxy(100,400,"时间太充足了，脱单的可以再去干点别的事");
	settextstyle(30,0.4,"楷体");
	settextcolor(WHITE);
		   saveimage("D:\\餐厅介绍截图.jpg");
	FlushMouseMsgBuffer();
	 while(true)
	{
		if (MouseHit())  
	        m1=GetMouseMsg();  
	 if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=50&&m1.y>=40&&m1.y<=70)
	 {
		 if((count/10)==(x/10))  
		      present();
		 else if((count/10)!=(x/10))
              scanpage((x/10)*10,(x/10)*10+10);
	 }
	   else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=50&&m1.y>=200&&m1.y<=230)
		   Save(x);
	  else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=410&&m1.x<=410+textwidth("基本介绍")&&m1.y>=200&&m1.y<=250)
	  {
		  presentpage();
		  settextcolor(WHITE);
		  outtextxy(520,400,_T("返回"));
		  RECT r = {110,10, 640, 480};
		  drawtext(test[x].infor,&r,DT_WORDBREAK);
		  	   saveimage("D:\\餐厅基本介绍截图.jpg");
		  settextcolor(BLACK);
		  while(true)
	{
		if (MouseHit())  
	        m1=GetMouseMsg(); 
		if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=520&&m1.x<=520+textwidth("返回")&&m1.y>=400&&m1.y<=430)
			Resshow(x);
		  }
	   }
	    else if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=410&&m1.x<=410+textwidth("线路简介")&&m1.y>=300&&m1.y<=350)
	  {
		  presentpage();
		  settextcolor(WHITE);
		  outtextxy(520,400,_T("返回"));
		  RECT r = {110,10, 640, 480};
		  drawtext(test[x].Line,&r,DT_WORDBREAK);
		  	   saveimage("D:\\餐厅路线介绍截图.jpg");
		  settextcolor(BLACK);
		  while(true)
	{
		if (MouseHit())  
	        m1=GetMouseMsg(); 
		if(m1.uMsg==WM_LBUTTONDOWN&&m1.x>=520&&m1.x<=520+textwidth("返回")&&m1.y>=400&&m1.y<=430)
			Resshow(x);
		  }
	   }
   }
}

void Save(int x)
{
	TCHAR a[10];
	int i=0;
	int result;
	while(true)
	{
	InputBox(a,10,_T("请输入您是否决定记录此次用餐数据"),_T("美食导航"),false);
	if(strcmp(a,"是")&&strcmp(a,"否"))
	{
		result=MessageBox(NULL,TEXT("您的输入无效，请重新输入是或否"),TEXT("你好"),MB_ICONINFORMATION|MB_YESNO);
	    switch(result)
		{
		case IDYES:break;
		case IDNO:initfood();
		}
	}
	else 
		break;
	}
	time_t rawtime;
	struct tm *timeinfo;
	time(&rawtime);
	timeinfo=localtime(&rawtime);
		if(_tcscmp(a,_T("是"))==0)
		      {
				  re[assist].month=timeinfo->tm_mon;
				re[assist].day=timeinfo->tm_mday;
				re[assist].Aveprice=stringtointeger(test[x].Aveprice);
				strcpy(re[assist].Name,test[x].Name);
				strcpy(re[assist].Kind,test[x].Kind);
				flagalarm=1;
		}
     loadimage(NULL,"D:\\等待闹钟.jpg",640,480);
	 char b[20];
	while(true)
	{
	InputBox(b,10,_T("请输入您是否决定开启闹钟功能"),_T("美食导航"),false);
	if(strcmp(b,"是")&&strcmp(b,"否"))
	{
		result=MessageBox(NULL,TEXT("您的输入无效，请重新输入是或否"),TEXT("你好"),MB_ICONINFORMATION|MB_YESNO);
	    switch(result)
		{
		case IDYES:
		case IDNO:break;
		}
	}
	else 
		break;
	}
	if(strcmp(b,"否"))
	{
		while(true)
	  {
		  time_t rawtime;
	struct tm *timeinfo;
	time(&rawtime);
	timeinfo=localtime(&rawtime);
		if(timeinfo->tm_hour==h3&&timeinfo->tm_min==m3)//进入闹钟界面
			alarm();
		loadimage(NULL,"D:\\等待闹钟.jpg",640,480);
		settextcolor(WHITE);
		if(h3<0||m3<0)
		{
			outtextxy(20,50,"您的返校闹钟");
		outtextxy(400,400,"提前退出");
		Sleep(500);
		outtextxy(20,100,"将不能");
		Sleep(500);
		outtextxy(20,300,"正常");
		Sleep(500);
		outtextxy(80,300,"工作");
			   saveimage("D:\\闹钟等待界面截图1.jpg");
		}
		else
		{
		outtextxy(20,50,"您的返校闹钟");
		Sleep(500);
		outtextxy(20,100,"将在");
		Sleep(500);
		outtextxy(20,300,integertostring(h3));
		Sleep(500);
		outtextxy(60,300,"点");
		Sleep(500);
		outtextxy(90,300,integertostring(m3));
		Sleep(500);
		outtextxy(130,300,"分");
		Sleep(500);
		outtextxy(130+textwidth("分"),300,"响起");
		saveimage("D:\\闹钟等待界面截图2.jpg");
		Sleep(500);
		}
		 }
	  }
	else
	{
		if(strcmp(a,"是")==0)
		{
		InputBox(b,10,_T("请输入您本次实际的消费金额"),_T("美食导航"),false);
	     re[assist].Price=stringtointeger2(b);
		 assist++;
		}
			init();
	}
}

void alarm(void)
{
	  loadimage(NULL,_T("D:\\闹钟.jpg"),640,480);
			settextcolor(WHITE);
			outtextxy(200,100,_T("真相只有一个！那就是"));
			outtextxy(200,140,"您该离开餐厅了");
			outtextxy(200,180,_T("否则您就可能无法在"));
			outtextxy(200,220,"原定时间返回学校了");
			outtextxy(20,400,_T("离开餐厅"));
			saveimage("D:\\闹钟界面截图.jpg");
            char a[10];
			if(Music[0])
			{
				mciSendString("open D:\\1.WMA",NULL,0,NULL);
				mciSendString("play D:\\1.WMA",NULL,0,NULL);
				FlushMouseMsgBuffer();
				while(true)
				{
					if(MouseHit())
					{
			m1=GetMouseMsg();//获取鼠标状态
			if (m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=20+textwidth("离开餐厅")&&m1.y>=400&&m1.y<=430)
			{
				InputBox(a,10,_T("请输入您本次实际的消费金额"),_T("美食导航"),false);
				if(flagalarm=1)//是否记录此次消费数据的判断
				{
			    re[assist].Price=stringtointeger2(a);
				assist++;
				}
				mciSendString("close D:\\1.WMA",NULL,0,NULL);//关闭音乐
                init();//退出闹钟
			}
		}
			}
			}
			else if(Music[1])
			{
				mciSendString("open D:\\2.WMA",NULL,0,NULL);
				mciSendString("play D:\\2.WMA",NULL,0,NULL);
				FlushMouseMsgBuffer();
				while(true)
				{
					if(MouseHit())
					{
			m1=GetMouseMsg();//获取鼠标状态
			if (m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=20+textwidth("离开餐厅")&&m1.y>=400&&m1.y<=430)
			{
				InputBox(a,10,_T("请输入您本次实际的消费金额"),_T("美食导航"),false);
				if(flagalarm=1)//是否记录此次消费数据的判断
				{
			    re[assist].Price=stringtointeger2(a);
				assist++;
				}
				mciSendString("close D:\\2.WMA",NULL,0,NULL);//关闭音乐
                init();//退出闹钟
			}
		}
			}
			}
			else if(Music[2])
			{
				mciSendString("open D:\\3.WMA",NULL,0,NULL);
				mciSendString("play D:\\3.WMA",NULL,0,NULL);
				FlushMouseMsgBuffer();
				while(true)
				{
					if(MouseHit())
					{
			m1=GetMouseMsg();//获取鼠标状态
			if (m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=20+textwidth("离开餐厅")&&m1.y>=400&&m1.y<=430)
			{
				InputBox(a,10,_T("请输入您本次实际的消费金额"),_T("美食导航"),false);
				if(flagalarm=1)//是否记录此次消费数据的判断
				{
			    re[assist].Price=stringtointeger2(a);
				assist++;
				}
				mciSendString("close D:\\3.WMA",NULL,0,NULL);//关闭音乐
                init();//退出闹钟
			}
		}
			}
			}
			else if(Music[3])
			{
				mciSendString("open D:\\4.WMA",NULL,0,NULL);
				mciSendString("play D:\\4.WMA",NULL,0,NULL);
				FlushMouseMsgBuffer();
				while(true)
				{
					if(MouseHit())
					{
			m1=GetMouseMsg();//获取鼠标状态
			if (m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=20+textwidth("离开餐厅")&&m1.y>=400&&m1.y<=430)
			{
				InputBox(a,10,_T("请输入您本次实际的消费金额"),_T("美食导航"),false);
				if(flagalarm=1)//是否记录此次消费数据的判断
				{
			    re[assist].Price=stringtointeger2(a);
				assist++;
				}
				mciSendString("close D:\\4.WMA",NULL,0,NULL);//关闭音乐
                init();//退出闹钟
			}
		}
			}
			}
			else if(Music[4])
			{
				mciSendString("open D:\\5.WMA",NULL,0,NULL);
				mciSendString("play D:\\5.WMA",NULL,0,NULL);
				FlushMouseMsgBuffer();
				while(true)
				{
					if(MouseHit())
					{
			m1=GetMouseMsg();//获取鼠标状态
			if (m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=20+textwidth("离开餐厅")&&m1.y>=400&&m1.y<=430)
			{
				InputBox(a,10,_T("请输入您本次实际的消费金额"),_T("美食导航"),false);
				if(flagalarm=1)//是否记录此次消费数据的判断
				{
			    re[assist].Price=stringtointeger2(a);
				assist++;
				}
				mciSendString("close D:\\5.WMA",NULL,0,NULL);//关闭音乐
                init();//退出闹钟
			}
		}
			}
			}
			else if(Music[5])
			{
				mciSendString("open D:\\6.WMA",NULL,0,NULL);
				mciSendString("play D:\\6.WMA",NULL,0,NULL);
				FlushMouseMsgBuffer();
				while(true)
				{
					if(MouseHit())
					{
			m1=GetMouseMsg();//获取鼠标状态
			if (m1.uMsg==WM_LBUTTONDOWN&&m1.x>=20&&m1.x<=20+textwidth("离开餐厅")&&m1.y>=400&&m1.y<=430)
			{
				InputBox(a,10,_T("请输入您本次实际的消费金额"),_T("美食导航"),false);
				if(flagalarm=1)//是否记录此次消费数据的判断
				{
			    re[assist].Price=stringtointeger2(a);
				assist++;
				}
				mciSendString("close D:\\6.WMA",NULL,0,NULL);//关闭音乐
                init();//退出闹钟
			}
		}
			}
			}
}


